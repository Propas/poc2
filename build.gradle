plugins {
    id 'java'
    id 'maven-publish'
}
tasks.withType(Test) {
    testLogging {
        showStandardStreams = true
        testLogging.exceptionFormat = "full"
        testLogging.showStackTraces = true
        testLogging.showExceptions = true
        testLogging.showCauses = false
        events "PASSED", "FAILED", "SKIPPED"
        reports {
            junitXml.enabled = true
            html.enabled = false
        }
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            def output = "Results: ${result.resultType} (${result.testCount} tests: ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            def startItem = "|  ", endItem = "  |"
            def repeatLength = startItem.length() + output.length() + endItem.length()
            println("\n" + ("-" * repeatLength) + "\n" + startItem + output + endItem + "\n" + ("-" * repeatLength))
        }
    }
}

private static String[] fetchIncludeTags(){
    if (System.getProperty("tags") != null) {
        return System.getProperty("tags").split(",") //gradle test -Dtags=smoke
    }
    return new String[0]
}

private static String[] fetchExcludeTags(){
    if (System.getProperty("excludetags") != null) {
        return System.getProperty("excludetags").split(",") //gradle test -Dexcludetags=smoke
    }
    return new String[0]
}

test {
    dependsOn("testGenesys")
    dependsOn("testCucm")
    dependsOn("testLegacy")

}

/*
gradle clean testCucm -Dtags=smoke
gradle clean testCucm

gradle clean testGenesys
gradle clean testGenesys -Dtags=smoke
gradle clean testGenesys -Dtags=smoke,fire

gradle clean test
gradle clean test -Dexcludetags=failing
*/

task testLegacy(type: Test) {
    useJUnitPlatform {
        filter {
            excludeTestsMatching "*Cucm*"
            excludeTestsMatching "*Genesys*"

        }

        includeTags = fetchIncludeTags()
        excludeTags = fetchExcludeTags()
    }
}

task testGenesys(type: Test) {
    useJUnitPlatform{
        filter {
            includeTestsMatching "*Genesys*"
//            includeTestsMatching "cz.zoomint.e2e.poc2.genesysTests.*"
        }

        includeTags = fetchIncludeTags()
        excludeTags = fetchExcludeTags()
    }
}

task testCucm(type: Test) {
//    dependsOn("testGenesys")
    useJUnitPlatform {
        filter {
            includeTestsMatching "*Cucm*"

        }

        includeTags = fetchIncludeTags()
        excludeTags = fetchExcludeTags()
    }
}

repositories {
    maven {
        url "http://artifactory.zoomint.com/artifactory/zoom-ci-release/"
        mavenContent {
            releasesOnly()
        }
    }
    maven {
        url "http://artifactory.zoomint.com/artifactory/zoom-ci-snapshot/"
        mavenContent {
            snapshotsOnly()
        }
    }
    maven {
        url "http://artifactory.zoomint.com/artifactory/zoom-ci-release"
    }
    maven {
        url "http://artifactory.zoomint.com/artifactory/ci-callrec-snapshots"
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
